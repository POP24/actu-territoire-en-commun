import React, { useState } from 'react';
import { Dialog, DialogContent } from './ui/dialog';
import { Button } from './ui/button';
import { ScrollArea } from './ui/scroll-area';

interface WhereYouAtQuizProps {
  isOpen: boolean;
  onClose: () => void;
}

const WhereYouAtQuiz: React.FC<WhereYouAtQuizProps> = ({ isOpen, onClose }) => {
  const [selectedQuiz, setSelectedQuiz] = useState<'where' | 'how' | null>(null);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState<string[]>([]);
  const [showResults, setShowResults] = useState(false);

  const whereYouAtQuestions = [
    "Retracez le chemin de l'eau de la pluie √† votre robinet.",
    "Combien de jours avant la prochaine pleine lune ? (√† deux jours pr√®s)",
    "Sur quel type de sol vous tenez-vous ?",
    "Quel est le total des pr√©cipitations l'an pass√© ? (√† cent millim√®tres pr√®s)",
    "Quand a eu lieu le dernier incendie pr√®s de chez vous ?",
    "Quelles √©taient les techniques de subsistance de la soci√©t√© qui vous a pr√©c√©d√© ici ?",
    "Nommez cinq plantes indig√®nes comestibles et leur saison.",
    "De quelle direction viennent g√©n√©ralement les temp√™tes hivernales ?",
    "O√π vont vos d√©chets ?",
    "Combien de temps dure la saison v√©g√©tative, chez vous ?",
    "Quel jour de l'ann√©e les ombres sont-elles les plus courtes ?",
    "Quand le cerf brame-t-il ? Quand naissent ses petits ?",
    "D√©signez cinq herbes locales et parmi elles les indig√®nes.",
    "Citez cinq oiseaux s√©dentaires et cinq migrateurs de votre r√©gion.",
    "Quelle est l'histoire de l'utilisation des terres chez vous ?",
    "Quel √©v√©nement √©cologique est √† l'origine de la formation du paysage local ?",
    "Quelles esp√®ces ont disparu de votre territoire ?",
    "Quel est la principale association de plantes dans votre r√©gion ?",
    "Depuis l'endroit o√π vous lisez ce questionnaire, indiquez le nord.",
    "Parmi les plantes sauvages, quelle est la premi√®re √† fleurir au printemps ?"
  ];

  const howYouLiveQuestions = [
    { text: "Vous aidez des peuples autochtones √† lutter contre l'accaparement de leurs terres ou des indig√®nes √† d√©fendre leurs cultures face √† l'uniformisation ?", type: "bonus" },
    { text: "Vous facilitez les rencontres inter-militantes situ√©es et aidez des luttes locales √† s'auto-organiser localement et/ou r√©gionalement ?", type: "bonus" },
    { text: "Vous d√©fendez une √©cologie de terrain, aux c√¥t√©s des habitant-es humains et non-humains ?", type: "bonus" },
    { text: "Vous menez des projets de restauration √©cologique, de renaturation, de sauvegarde des milieux naturels ou de reforestation ?", type: "bonus" },
    { text: "Vous ≈ìuvrez ¬´ pour les animaux ¬ª (dans une optique plus qu'humaine, animaliste, environnementaliste ou autre encore), travaillez √† contrecarrer l'anthropocentrisme ambiant ?", type: "bonus" },
    { text: "Vous d√©veloppez des projets de cartographie sensible, populaire, √©cologiste et √©cocentr√©e des bassins-versants en tant que milieux partag√©s ?", type: "bonus" },
    { text: "Vous organisez des actions de r√©sistance concr√®tes √† de grands projets capitalistes inutiles et polluants ?", type: "bonus" },
    { text: "Vous inventez des modalit√©s de transmission populaire des savoirs √©cologiques locaux et globaux ?", type: "bonus" },
    { text: "Vous travaillez √† porter la question bior√©gionaliste au c≈ìur des quartiers populaires dans une optique d√©coloniale ?", type: "bonus" },
    { text: "Vous prenez part √† la vie politique locale pour l'orienter vers des d√©cisions radicalement √©cologistes, sociales et d√©croissantes ?", type: "bonus" },
    { text: "Vous travaillez √† la cr√©ation de nouveaux \"communs\" concrets, potentiellement capables de r√©sister √† l'attraction n√©olib√©rale et l'extractivisme ambiant ?", type: "bonus" },
    { text: "Vous avez trouv√© les moyens de d√©fendre en m√™me temps la socio-diversit√© et la bio-diversit√© dans une m√™me logique de terrain ?", type: "bonus" },
    { text: "Votre collectif de consulting aide des entreprises √† faire de \"l'√©cobusiness\", du \"d√©veloppement durable\" ou de la \"compensation carbone\" ?", type: "malus" },
    { text: "Vous travaillez pour pas un rond pour des politiciens qui utilisent et d√©tournent vos concepts dans le cadre de leurs campagnes politiques pas √©colo du tout ?", type: "malus" },
    { text: "Vous avez d√©velopp√© des concepts, articles ou projets \"bior√©gionalistes\" gr√¢ce √† de l'argent issu d'une fondation priv√©e douteuse ou d'un grand groupe capitaliste ?", type: "malus" },
    { text: "Vos propositions \"bior√©gionalistes\" semblent tr√®s appr√©ci√©es par les baronnies capitalistes et les petits politiciens locaux, mais pas du tout par les habitant¬∑es ?", type: "malus" },
    { text: "Votre recherche-action \"bior√©gionaliste\" vous ouvre de nombreuses portes prestigieuses √† l'Universit√© mais elle demeure parfaitement incompr√©hensible pour les citoyen¬∑nes non-initi√©¬∑es √† votre discipline ?", type: "malus" },
    { text: "Les membres de votre collectif passent-iels leur temps sur Instagram et r√™vent-iels de devenir c√©l√®bres au sein de la soci√©t√© du spectacle actuelle ?", type: "malus" },
    { text: "Personne au sein de votre collectif ne voie vraiment le probl√®me que posent les √©levages industriels de poulets, la surp√™che, et les √©levages d'animaux √©lev√©s et entass√©s leur vie durant dans des cages pour leurs fourrures ?", type: "malus" },
    { text: "Vous ne voyez pas bien en quoi l'√©cologie devrait √™tre politique, intersectionnelle ou d√©coloniale, et les mouvements √©co-f√©ministes vous inspirent surtout de la m√©fiance ?", type: "malus" }
  ];

  const getWhereYouAtScore = (score: number) => {
    if (score <= 3) return { level: "Vous √™tes √† c√¥t√© de la plaque !", color: "text-red-400" };
    if (score <= 7) return { level: "C'est difficile d'√™tre √† deux endroits en m√™me temps quand on n'est nulle part !", color: "text-orange-400" };
    if (score <= 12) return { level: "Une compr√©hension satisfaisante de ce qui est √©vident.", color: "text-yellow-400" };
    if (score <= 16) return { level: "Vous pr√™tez attention √† ce qui vous entoure.", color: "text-green-400" };
    if (score <= 19) return { level: "Vous savez o√π vous √™tes.", color: "text-blue-400" };
    return { level: "Non seulement vous savez o√π vous √™tes, mais vous savez o√π c'est !", color: "text-purple-400" };
  };

  const getHowYouLiveScore = (score: number) => {
    if (score < 0) return { level: "√Ä l'√©vidence, vous √™tes bien loin : adieu la licence ¬´ bior√©gion ¬ª !", color: "text-red-400" };
    if (score === 0) return { level: "On n'est pas encore arriv√©‚Ä¶ mais rien n'est jamais perdu, un petit effort !", color: "text-orange-400" };
    if (score > 0 && score <= 40) return { level: "Youpi, votre collectif peut tr√®s l√©gitimement se pr√©tendre \"bior√©gionaliste\" ! C'est beau de savoir que le mouvement vit √† travers vos actions.", color: "text-green-400" };
    return { level: "Bravo ! Vos actions m√©ritent vraiment d'√™tre connues et de servir d'exemples √† d'autres. Parlez de votre travail militant autour de vous ! Longue vie √† vous !", color: "text-purple-400" };
  };

  const resetQuiz = () => {
    setSelectedQuiz(null);
    setCurrentQuestion(0);
    setAnswers([]);
    setShowResults(false);
  };

  const handleClose = () => {
    resetQuiz();
    onClose();
  };

  const startQuiz = (type: 'where' | 'how') => {
    setSelectedQuiz(type);
  };

  const handleAnswer = (answer: string) => {
    const newAnswers = [...answers, answer];
    setAnswers(newAnswers);

    const currentQuestions = selectedQuiz === 'where' ? whereYouAtQuestions : howYouLiveQuestions;
    if (currentQuestion < currentQuestions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setShowResults(true);
    }
  };

  const renderQuizChoice = () => (
    <div className="p-6">
      <h2 className="text-xl font-bold text-cyan-300 mb-6 text-center">CHOISISSEZ VOTRE TEST</h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30">
          <h3 className="text-lg font-bold text-cyan-300 mb-2">üìç "O√π en √™tes-vous ?"</h3>
          <p className="text-sm text-cyan-200 mb-3">Test individuel - Conscience du milieu</p>
          <p className="text-sm text-cyan-100 mb-4">
            20 questions sur votre connaissance du territoire : 
            eau, sol, plantes, cycles naturels...
          </p>
          <Button 
            onClick={() => startQuiz('where')}
            className="w-full bg-cyan-600/30 hover:bg-cyan-600/40 text-cyan-300 border border-cyan-500/50"
          >
            COMMENCER
          </Button>
        </div>
        
        <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30">
          <h3 className="text-lg font-bold text-cyan-300 mb-2">‚úä "Comment vivez-vous ?"</h3>
          <p className="text-sm text-cyan-200 mb-3">Test collectif - Action bior√©gionale</p>
          <p className="text-sm text-cyan-100 mb-4">
            √âvaluez vos pratiques : r√©sistance locale, 
            communs, politique, √©cologie active...
          </p>
          <Button 
            onClick={() => startQuiz('how')}
            className="w-full bg-cyan-600/30 hover:bg-cyan-600/40 text-cyan-300 border border-cyan-500/50"
          >
            COMMENCER
          </Button>
        </div>
      </div>
      
      <div className="mt-6 text-center">
        <p className="text-xs text-cyan-200">
          Sources : Van Andruss et al. (1981) ‚Ä¢ Miles & Thomashow (2012) ‚Ä¢ 
          Rollot & Schaffner (2024) - <em>Qu'est-ce qu'une bior√©gion ?</em>
        </p>
      </div>
    </div>
  );

  const renderWhereQuizQuestion = () => (
    <div className="p-6">
      <div className="mb-4">
        <div className="flex justify-between items-center mb-2">
          <h3 className="text-lg font-bold text-cyan-300">O√π en √™tes-vous ?</h3>
          <span className="text-sm text-cyan-200">
            {currentQuestion + 1} / {whereYouAtQuestions.length}
          </span>
        </div>
        <div className="w-full bg-black/50 rounded-full h-2">
          <div 
            className="bg-cyan-500 h-2 rounded-full transition-all duration-300"
            style={{ width: `${((currentQuestion + 1) / whereYouAtQuestions.length) * 100}%` }}
          />
        </div>
      </div>

      <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30 mb-6">
        <p className="text-cyan-100 mb-4 text-base leading-relaxed">
          <span className="text-cyan-300 font-semibold">{currentQuestion + 1}.</span> {whereYouAtQuestions[currentQuestion]}
        </p>
        <textarea
          className="w-full bg-black/50 border border-cyan-500/30 rounded-lg p-3 text-cyan-100 placeholder-cyan-300/50 resize-none"
          rows={3}
          placeholder="Votre r√©ponse..."
          onKeyDown={(e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
              e.preventDefault();
              const answer = (e.target as HTMLTextAreaElement).value;
              if (answer.trim()) {
                handleAnswer(answer);
                (e.target as HTMLTextAreaElement).value = '';
              }
            }
          }}
        />
        <p className="text-xs text-cyan-300/70 mt-2">Appuyez sur Entr√©e pour passer √† la question suivante</p>
      </div>

      <div className="flex justify-between">
        <Button 
          onClick={() => handleAnswer('')}
          variant="outline"
          className="border-cyan-500/50 text-cyan-300 hover:bg-cyan-600/20"
        >
          Passer
        </Button>
        <Button 
          onClick={resetQuiz}
          variant="outline"
          className="border-cyan-500/50 text-cyan-300 hover:bg-cyan-600/20"
        >
          Recommencer
        </Button>
      </div>
    </div>
  );

  const renderHowQuizQuestion = () => {
    const currentQ = howYouLiveQuestions[currentQuestion];
    return (
      <div className="p-6">
        <div className="mb-4">
          <div className="flex justify-between items-center mb-2">
            <h3 className="text-lg font-bold text-cyan-300">Comment vivez-vous ?</h3>
            <span className="text-sm text-cyan-200">
              {currentQuestion + 1} / {howYouLiveQuestions.length}
            </span>
          </div>
          <div className="w-full bg-black/50 rounded-full h-2">
            <div 
              className="bg-cyan-500 h-2 rounded-full transition-all duration-300"
              style={{ width: `${((currentQuestion + 1) / howYouLiveQuestions.length) * 100}%` }}
            />
          </div>
        </div>

        <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30 mb-6">
          <div className="flex items-start gap-3 mb-4">
            <span className={`px-2 py-1 rounded text-xs font-semibold ${
              currentQ.type === 'bonus' ? 'bg-green-600/20 text-green-300' : 'bg-red-600/20 text-red-300'
            }`}>
              {currentQ.type === 'bonus' ? '+5 pts' : '-5 pts'}
            </span>
            <span className="text-cyan-300 font-semibold">{currentQuestion + 1}.</span>
          </div>
          
          <p className="text-cyan-100 mb-6 text-base leading-relaxed">
            {currentQ.text}
          </p>

          <div className="flex gap-4">
            <Button 
              onClick={() => handleAnswer('oui')}
              className="flex-1 bg-green-600/30 hover:bg-green-600/40 text-green-300 border border-green-500/50"
            >
              OUI
            </Button>
            <Button 
              onClick={() => handleAnswer('non')}
              className="flex-1 bg-red-600/30 hover:bg-red-600/40 text-red-300 border border-red-500/50"
            >
              NON
            </Button>
          </div>
        </div>

        <div className="flex justify-between">
          <Button 
            onClick={resetQuiz}
            variant="outline"
            className="border-cyan-500/50 text-cyan-300 hover:bg-cyan-600/20"
          >
            Recommencer
          </Button>
        </div>
      </div>
    );
  };

  const renderWhereResults = () => {
    const answeredQuestions = answers.filter(a => a.trim()).length;
    const scoreLevel = getWhereYouAtScore(answeredQuestions);
    
    return (
      <div className="p-6">
        <div className="text-center mb-6">
          <h3 className="text-xl font-bold text-cyan-300 mb-2">R√©sultats</h3>
          <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30">
            <div className="text-3xl font-bold text-cyan-400 mb-2">
              {answeredQuestions} / {whereYouAtQuestions.length}
            </div>
            <div className={`text-lg font-semibold mb-4 ${scoreLevel.color}`}>
              {scoreLevel.level}
            </div>
            <p className="text-sm text-cyan-200">
              Ce questionnaire √©value votre conscience de votre environnement imm√©diat. 
              Plus votre score est √©lev√©, plus vous √™tes connect√© √† votre territoire.
            </p>
          </div>
        </div>

        <div className="flex flex-col sm:flex-row gap-3">
          <Button 
            onClick={resetQuiz}
            className="flex-1 bg-cyan-600/30 hover:bg-cyan-600/40 text-cyan-300 border border-cyan-500/50"
          >
            Refaire le test
          </Button>
          <Button 
            onClick={handleClose}
            variant="outline"
            className="flex-1 border-cyan-500/50 text-cyan-300 hover:bg-cyan-600/20"
          >
            Fermer
          </Button>
        </div>
      </div>
    );
  };

  const renderHowResults = () => {
    let score = 0;
    answers.forEach((answer, index) => {
      if (answer === 'oui') {
        const question = howYouLiveQuestions[index];
        score += question.type === 'bonus' ? 5 : -5;
      }
    });
    
    const scoreLevel = getHowYouLiveScore(score);
    
    return (
      <div className="p-6">
        <div className="text-center mb-6">
          <h3 className="text-xl font-bold text-cyan-300 mb-2">R√©sultats</h3>
          <div className="bg-black/50 rounded-xl p-6 border border-cyan-500/30">
            <div className="text-3xl font-bold text-cyan-400 mb-2">
              {score} points
            </div>
            <div className={`text-lg font-semibold mb-4 ${scoreLevel.color}`}>
              {scoreLevel.level}
            </div>
            <p className="text-sm text-cyan-200">
              Ce quiz √©value la bior√©gionalit√© de votre collectif selon les crit√®res de Rollot & Schaffner (2024).
            </p>
          </div>
        </div>

        <div className="flex flex-col sm:flex-row gap-3">
          <Button 
            onClick={resetQuiz}
            className="flex-1 bg-cyan-600/30 hover:bg-cyan-600/40 text-cyan-300 border border-cyan-500/50"
          >
            Refaire le test
          </Button>
          <Button 
            onClick={handleClose}
            variant="outline"
            className="flex-1 border-cyan-500/50 text-cyan-300 hover:bg-cyan-600/20"
          >
            Fermer
          </Button>
        </div>
      </div>
    );
  };

  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] bg-black/90 border-cyan-400/20 text-cyan-100">
        <ScrollArea className="max-h-[80vh]">
          {!selectedQuiz && renderQuizChoice()}
          {selectedQuiz === 'where' && !showResults && renderWhereQuizQuestion()}
          {selectedQuiz === 'how' && !showResults && renderHowQuizQuestion()}
          {selectedQuiz === 'where' && showResults && renderWhereResults()}
          {selectedQuiz === 'how' && showResults && renderHowResults()}
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
};

export default WhereYouAtQuiz;